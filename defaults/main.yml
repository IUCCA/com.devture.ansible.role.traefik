---
# Project source code URL: https://github.com/traefik/traefik

devture_traefik_enabled: true

devture_traefik_base_path: "/devture-traefik"
devture_traefik_config_dir_path: "{{ devture_traefik_base_path }}/config"
devture_traefik_ssl_dir_path: "{{ devture_traefik_base_path }}/ssl"

devture_traefik_systemd_required_services_list: ['docker.service']

devture_traefik_container_image: "docker.io/traefik:v2.9.6"

devture_traefik_container_network: traefik

# A list of extra arguments to pass to the container
devture_traefik_container_extra_arguments: []

devture_traefik_ssl_email_address: ''

devture_traefik_uid: ~
devture_traefik_gid: ~

devture_traefik_config_log_level: INFO

# devture_traefik_config_letsencrypt_use_staging controls whether the Let's Encrypt staging environment is used or not.
devture_traefik_config_letsencrypt_use_staging: false

# devture_traefik_config_letsencrypt_resolver_caServer specifies the CA server endpoint to use.
devture_traefik_config_letsencrypt_resolver_caServer: "{{ 'https://acme-staging-v02.api.letsencrypt.org/directory' if devture_traefik_config_letsencrypt_use_staging else 'https://acme-v02.api.letsencrypt.org/directory' }}"

# Specifies the primary entrypoint.
# We default to the web-secure entrypoint if it's enabled.
# When web-secure is enabled, the web (80) entrypoint redirects to web-secure (443)
devture_traefik_config_entrypoint_primary: "{{ devture_traefik_config_entrypoint_web_secure_name if devture_traefik_config_entrypoint_web_secure_enabled else devture_traefik_config_entrypoint_web_name }}"

# Controls whether the web entrypoint is enabled
devture_traefik_config_entrypoint_web_enabled: true
devture_traefik_config_entrypoint_web_name: web
devture_traefik_config_entrypoint_web_port: 80
devture_traefik_config_entrypoint_web_address: ":{{ devture_traefik_config_entrypoint_web_port }}"

# Controls whether the web entrypoint should be redirected to web-secure
# If web-secure is enabled, we enable this redirection by default.
devture_traefik_config_entrypoint_web_to_web_secure_redirection_enabled: "{{ devture_traefik_config_entrypoint_web_secure_enabled }}"

# Controls whether the web-secure entrypoint is enabled
devture_traefik_config_entrypoint_web_secure_enabled: true
devture_traefik_config_entrypoint_web_secure_name: web-secure
devture_traefik_config_entrypoint_web_secure_port: 443
devture_traefik_config_entrypoint_web_secure_address: ":{{ devture_traefik_config_entrypoint_web_secure_port }}"

# devture_traefik_config_letsencrypt_httpChallenge_entrypoint controls on which entrypoint the HTTP ACME challenge is enabled.
devture_traefik_config_letsencrypt_httpChallenge_entrypoint: 'web'

# devture_traefik_config_api_dashboard controls the api.dashboard configuration setting,
# which controls whether the dashboard is enabled.
# See: devture_traefik_dashboard_enabled
devture_traefik_config_api_dashboard: "{{ devture_traefik_dashboard_enabled }}"

# devture_traefik_dashboard_enabled controls whether the Dashboard is enabled.
# See: https://doc.traefik.io/traefik/operations/dashboard/
devture_traefik_dashboard_enabled: false

# The hostname where the Traefik Dashboard will be exposed on.
# The Dashboard will be available at https://HOSTNAME/dashboard/ (note the trailing slash).
devture_traefik_dashboard_hostname: ''

# devture_traefik_dashboard_rule controls where the Traefik Dashboard will be exposed.
# See: devture_traefik_dashboard_enabled, devture_traefik_dashboard_hostname
devture_traefik_dashboard_rule: "Host(`{{ devture_traefik_dashboard_hostname }}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"

# Specifies the entrypoints through which the Traefik Dashboard will be exposed.
devture_traefik_dashboard_entryPoints: "{{ devture_traefik_config_entrypoint_web_secure_name if devture_traefik_config_entrypoint_web_secure_enabled else (devture_traefik_config_entrypoint_web_name if devture_traefik_config_entrypoint_web_enabled else '') }}"  # noqa var-naming

devture_traefik_dashboard_tls: "{{ devture_traefik_dashboard_entryPoints != 'web' }}"
devture_traefik_dashboard_tls_certResolver: default  # noqa var-naming

# devture_traefik_dashboard_basicauth_enabled controls if the dashboard is protected with Basic Auth.
# When the Dashboard is enabled, we automatically enable Basic Auth.
devture_traefik_dashboard_basicauth_enabled: "{{ devture_traefik_dashboard_enabled }}"
devture_traefik_dashboard_basicauth_user: ''
devture_traefik_dashboard_basicauth_password: ''
# Temporary file name on the host that runs Ansible
devture_traefik_dashboard_basicauth_file_tmp: "/tmp/ansible-htpasswd-devture-traefik"

# A list of additional entrypoints.
#
# Playbooks are meant to inject their defaults into `devture_traefik_additional_entrypoints_auto`.
# To define your own custom entrypoints, use `devture_traefik_additional_entrypoints_custom`.
#
# Each entrypoint must be defined with the following parameters:
# - name: the name of the entrypoint
# - port: the port number used for the entrypoint within the Traefik continer
# - host_bind_port: the port number (e.g. 1234) or interface + port (0.0.0.0:1234) where the container will publish the port
# - config: a mapping with additional configuration options for the entrypoint
#
# Example:
# devture_traefik_additional_entrypoints:
#   - name: new-entrypoint
#     port: 1234
#     host_bind_port: 1234
#     config: {}
#   - name: another-entrypoint
#     port: 4321
#     host_bind_port: 127.0.0.1:4321
#     config:
#       http2:
#         maxConcurrentStreams: 250
devture_traefik_additional_entrypoints: "{{ devture_traefik_additional_entrypoints_auto + devture_traefik_additional_entrypoints_custom }}"
devture_traefik_additional_entrypoints_auto: []
devture_traefik_additional_entrypoints_custom: []

# A list of additional domains that this role should obtain certificates for.
#
# For each domain in the list, a dummy router like this would be added to the configuration:
#  http:
#    routers:
#      example.com-dummy:
#        rule: Host(`example.coma`)
#        tls:
#          certResolver: default
#
# This router does not forward traffic to any service.
# The goal is to just obtain the certificate and allow it to be used for other purposes,
# after extracting it out of Traefik via traefik-certs-dumper (https://github.com/ldez/traefik-certs-dumper).
# For extracting certificates out using this tool, see this role: https://github.com/devture/com.devture.ansible.role.traefik_certs_dumper
devture_traefik_additional_domains_to_obtain_certificates_for: []

# Specifies the entrypoints through which the additional domains will be exposed.
devture_traefik_additional_domains_to_obtain_certificates_for_entryPoints: "{{ devture_traefik_config_entrypoint_web_secure_name if devture_traefik_config_entrypoint_web_secure_enabled else (devture_traefik_config_entrypoint_web_name if devture_traefik_config_entrypoint_web_enabled else '') }}"  # noqa var-naming

# Specifies the certitficate resolver to use when obtaining additional certificates.
# See: devture_traefik_additional_domains_to_obtain_certificates_for
devture_traefik_additional_domains_to_obtain_certificates_for_certResolver: default  #noqa

# Specifies how the container publishes its web port
#
# Takes an "<ip>:<port>" value (e.g. "127.0.0.1:80"), just a port number or an empty string to not expose.
devture_traefik_container_web_host_bind_port: "{{ devture_traefik_config_entrypoint_web_port if devture_traefik_config_entrypoint_web_enabled else '' }}"

# Specifies how the container publishes its web-secure port
#
# Takes an "<ip>:<port>" value (e.g. "127.0.0.1:443"), just a port number or an empty string to not expose.
devture_traefik_container_web_secure_host_bind_port: "{{ devture_traefik_config_entrypoint_web_secure_port if devture_traefik_config_entrypoint_web_secure_enabled else '' }}"

# Default Traefik configuration template which covers the generic use case.
# You can customize it by controlling the various variables inside it.
#
# For a more advanced customization, you can extend the default (see `devture_traefik_configuration_extension_yaml`)
# or completely replace this variable with your own template.
devture_traefik_configuration_yaml: "{{ lookup('template', 'templates/traefik.yml.j2') }}"

devture_traefik_configuration_extension_yaml: |
  # Your custom YAML configuration for Traefik goes here.
  # This configuration extends the default starting configuration (`devture_traefik_configuration_yaml`).
  #
  # You can override individual variables from the default configuration, or introduce new ones.
  #
  # If you need something more special, you can take full control by
  # completely redefining `devture_traefik_configuration_yaml`.
  #
  # Example configuration extension follows:
  #
  # api:
  #   dashboard: true

devture_traefik_configuration_extension: "{{ devture_traefik_configuration_extension_yaml | from_yaml if devture_traefik_configuration_extension_yaml | from_yaml is mapping else {} }}"

# Holds the final Traefik configuration (a combination of the default and its extension).
# You most likely don't need to touch this variable. Instead, see `devture_traefik_configuration_yaml`.
devture_traefik_configuration: "{{ devture_traefik_configuration_yaml | from_yaml | combine(devture_traefik_configuration_extension, recursive=True) }}"

# devture_traefik_environment_variables holds a string with environment variable to pass to Traefik.
#
# Example:
# devture_traefik_environment_variables: |
#   TRAEFIK_ACCESSLOG=true
#   TRAEFIK_API=true
devture_traefik_environment_variables: ''

# devture_traefik_labels_additional_labels contains a multiline string with additional labels to add to the container label file.
# See `../templates/labels.j2` for details.
#
# Example:
# devture_traefik_labels_additional_labels: |
#   my.label=1
#   another.label="here"
devture_traefik_labels_additional_labels: ''
